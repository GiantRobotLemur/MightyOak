//! @file Ag/Core/Timer.hpp
//! @brief The declaration of various types of timer component.
//! @author GiantRobotLemur@na-se.co.uk
//! @date 2023
//! @copyright This file is part of the Mighty Oak project which is released
//! under LGPL 3 license. See LICENSE file at the repository root or go to
//! https://github.com/GiantRobotLemur/MightyOak for full license details.
////////////////////////////////////////////////////////////////////////////////

#ifndef __AG_CORE_TIMER_HPP__
#define __AG_CORE_TIMER_HPP__

////////////////////////////////////////////////////////////////////////////////
// Dependent Header Files
////////////////////////////////////////////////////////////////////////////////
#include <cstdint>

namespace Ag {

////////////////////////////////////////////////////////////////////////////////
// Data Type Declarations
////////////////////////////////////////////////////////////////////////////////
using MonotonicTicks = int64_t;

////////////////////////////////////////////////////////////////////////////////
// Function Declarations
////////////////////////////////////////////////////////////////////////////////
//! @brief A namespace representing a high resolution measurement of the passage
//! of time.
namespace HighResMonotonicTimer
{
MonotonicTicks getFrequency();
MonotonicTicks getTime();
MonotonicTicks getDuration(const MonotonicTicks &start);
double getTimeSpan(MonotonicTicks tickCount);
};

} // namespace Ag

#endif // Header guard
////////////////////////////////////////////////////////////////////////////////
