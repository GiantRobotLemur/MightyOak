//! @file ArmDebugger/CommandLineOptions.hpp
//! @brief The declaration of an object which manages options specified on the
//! command line.
//! @author GiantRobotLemur@na-se.co.uk
//! @date 2024
//! @copyright This file is part of the Mighty Oak project which is released
//! under LGPL 3 license. See LICENSE file at the repository root or go to
//! https://github.com/GiantRobotLemur/MightyOak for full license details.
////////////////////////////////////////////////////////////////////////////////

#ifndef __ARM_DEBUGGER_CLI_OPTIONS_HPP__
#define __ARM_DEBUGGER_CLI_OPTIONS_HPP__

////////////////////////////////////////////////////////////////////////////////
// Dependent Header Files
////////////////////////////////////////////////////////////////////////////////
#include <QCoreApplication>
#include <QString>

namespace Mo {

////////////////////////////////////////////////////////////////////////////////
// Data Type Declarations
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Class Declarations
////////////////////////////////////////////////////////////////////////////////
enum class CliAction : uint8_t
{
    None,
    ShowHelp,
    ShowVersion,
    RunSession,
    ConfigureSession,
};

//! @brief An object which manages options specified on the command line.
class CommandLineOptions
{
Q_DECLARE_TR_FUNCTIONS(CommandLineOptions)
public:
    // Construction/Destruction
    CommandLineOptions();
    ~CommandLineOptions() = default;

    // Accessors
    bool needsUI() const;
    CliAction getAction() const;
    const QString &getSessionFileName() const;

    // Operations
    bool tryParse(const QStringList &args, QString &error);
private:
    // Internal Types

    // Internal Functions

    // Internal Fields
    QString _sessionFile;
    CliAction _action;
};

////////////////////////////////////////////////////////////////////////////////
// Function Declarations
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Templates
////////////////////////////////////////////////////////////////////////////////

} // namespace Mo

#endif // Header guard
////////////////////////////////////////////////////////////////////////////////
